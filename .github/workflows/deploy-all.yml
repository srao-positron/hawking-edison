name: Deploy All (Orchestrated)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Step 1: Deploy AWS Infrastructure (Lambda, SNS, SQS)
  deploy-infrastructure:
    name: Deploy AWS Infrastructure
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.modified, 'infrastructure/') ||
      contains(github.event.head_commit.message, '[infra]')
    uses: ./.github/workflows/deploy-infrastructure.yml
    secrets: inherit

  # Step 2: Deploy Supabase Edge Functions
  deploy-edge-functions:
    name: Deploy Edge Functions
    needs: [deploy-infrastructure]
    if: always() && (needs.deploy-infrastructure.result == 'success' || needs.deploy-infrastructure.result == 'skipped')
    uses: ./.github/workflows/deploy-edge-functions.yml
    secrets: inherit

  # Step 3: Deploy Frontend to Vercel
  deploy-frontend:
    name: Deploy Frontend
    needs: [deploy-infrastructure, deploy-edge-functions]
    if: always() && needs.deploy-edge-functions.result == 'success'
    uses: ./.github/workflows/deploy-frontend.yml
    secrets: inherit

  # Step 4: Run E2E Tests against deployed environment
  test-deployed:
    name: Test Deployed Environment
    needs: [deploy-frontend]
    if: always() && needs.deploy-frontend.result == 'success'
    uses: ./.github/workflows/test.yml
    secrets: inherit

  # Final notification job
  notify-status:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-infrastructure, deploy-edge-functions, deploy-frontend, test-deployed]
    if: always()
    
    steps:
      - name: Check deployment status
        run: |
          echo "Infrastructure: ${{ needs.deploy-infrastructure.result }}"
          echo "Edge Functions: ${{ needs.deploy-edge-functions.result }}"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"
          echo "Tests: ${{ needs.test-deployed.result }}"
          
          if [[ "${{ needs.test-deployed.result }}" == "success" ]]; then
            echo "✅ Full deployment completed successfully!"
          else
            echo "❌ Deployment pipeline had failures"
            exit 1
          fi